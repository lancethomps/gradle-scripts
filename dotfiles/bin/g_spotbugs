#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
##################################################################################################################################################

OPEN_FILES_DIR='build/reports'
OPEN_FILES_MATCHER='spotbugs_*.html'

################################################################### USAGE ########################################################################
_SCRIPT_NAME="$(basename "$0")"

function _usage() {
  local SYNOP_INDENT
  SYNOP_INDENT="$(head -c "$(echo -n "${_SCRIPT_NAME}" | wc -c)" </dev/zero | tr '\0' " ")"

  cat <<EOF
NAME
       ${_SCRIPT_NAME}

SYNOPSIS
       ${_SCRIPT_NAME} [--cd-to-git-base-dir] [--no-open] <gradle_arg>...
       ${SYNOP_INDENT} [--help] [--debug] [--verbose]

EXAMPLES
       ${_SCRIPT_NAME}
EOF
}
##################################################################################################################################################

################################################################# FILTERARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      export debug_mode=true
      shift
      ;;
    --verbose)
      export verbose=true
      shift
      ;;
    --cd-to-git-base-dir)
      cd_to_git_base_dir=true
      shift
      ;;
    --no-open)
      no_open=true
      shift
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

function should_open_file() {
  local open_file="$1" xml_file total_bugs

  xml_file="${open_file//\.html/\.xml}"
  if ! test -e "$xml_file"; then
    xml_file="$(dirname "$open_file")/spotbugs/$(basename "$xml_file")"
  fi

  total_bugs="$(xq -r '.BugCollection.FindBugsSummary["@total_bugs"]' "$xml_file")"
  test "$total_bugs" -gt 0
}

function open_files() {
  local open_file open_files

  if check_true "${no_open-}"; then
    return 0
  fi

  mapfile -d $'\0' -t open_files < <(find -Ls "$OPEN_FILES_DIR" -name "$OPEN_FILES_MATCHER" -print0)

  if test "${#open_files[@]}" -eq 0; then
    exit_fatal "Could not find any files to open."
  fi

  for open_file in "${open_files[@]}"; do
    if ! should_open_file "$open_file"; then
      echo "Skipping file even though it exists: $open_file"
      continue
    fi
    log_and_run open "$open_file"
  done
}

function main() {
  cd_to_git_base_dir_if_needed

  log_and_run g "$@" spotbugs -Porg.gradle.workers.max=10 || true
  open_files
}

main "${PASSTHROUGH_ARGS[@]}"
