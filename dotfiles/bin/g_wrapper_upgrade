#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
##################################################################################################################################################

################################################################### USAGE ########################################################################
_SCRIPT_NAME="$(basename "$0")"

function _usage() {
  local SYNOP_INDENT
  SYNOP_INDENT="$(head -c "$(echo -n "${_SCRIPT_NAME}" | wc -c)" </dev/zero | tr '\0' " ")"

  cat <<EOF
NAME
       ${_SCRIPT_NAME}

SYNOPSIS
       ${_SCRIPT_NAME} [--all | --bin] [--no-use-version-latest] [--no-wrapper]
       ${SYNOP_INDENT} [--help] [--debug] [--verbose]
       ${SYNOP_INDENT} [<passthrough_arg>...]

EXAMPLES
       ${_SCRIPT_NAME}
EOF
}
##################################################################################################################################################

################################################################# SCRIPTARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      export debug_mode=true
      shift
      ;;
    --verbose)
      export verbose=true
      shift
      ;;
    --all)
      all=true
      shift
      ;;
    --bin)
      bin=true
      shift
      ;;
    --no-use-version-latest)
      no_use_version_latest=true
      shift
      ;;
    --no-wrapper)
      no_wrapper=true
      shift
      ;;
    --)
      shift
      PASSTHROUGH_ARGS+=("$@")
      shift "$#"
      break
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

function main() {
  local gradle_args=("$@")
  cd_to_git_base_dir

  if check_true "${bin-}"; then
    gradle_args+=(--distribution-type BIN)
  elif check_true "${all-}"; then
    gradle_args+=(--distribution-type ALL)
  elif rg -q 'all.zip' gradle/wrapper/gradle-wrapper.properties; then
    gradle_args+=(--distribution-type ALL)
  else
    gradle_args+=(--distribution-type BIN)
  fi

  if ! is_arg_present --gradle-version "${gradle_args[@]}"; then
    if ! check_true "${no_use_version_latest-}"; then
      log_stderr "No --gradle-version specified, using --gradle-version=latest"
      gradle_args+=(--gradle-version "latest")
    elif command -v gradle_release_versions >/dev/null 2>&1; then
      local latest_version
      log_stderr "No --gradle-version specified, finding the latest..."
      latest_version="$(gradle_release_versions | head -1 | gsed -r 's/\.0$//g')"
      log_stderr "Using --gradle-version=${latest_version}"
      gradle_args+=(--gradle-version "$latest_version")
    else
      exit_fatal "No --gradle-version specified"
    fi
  fi

  if check_true "${no_wrapper-}"; then
    log_and_run gradle wrapper "${gradle_args[@]}"
  else
    log_and_run g wrapper "${gradle_args[@]}"
  fi

  if git check-ignore --quiet gradlew.bat; then
    rm -f gradlew.bat
  fi

  return 0
}

main "${PASSTHROUGH_ARGS[@]}"
