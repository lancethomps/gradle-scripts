#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.common_copy.sh
source "${_SCRIPT_DIR}/.common_copy.sh" || exit 1
set -o errexit -o errtrace -o nounset
##################################################################################################################################################

if test -z "${1-}"; then
  exit_fatal "Usage: $(basename "$0") <version_glob>"
fi

CHECK_DIRS=(
  "${HOME}/.gradle/caches/modules-2"
  "${HOME}/.m2/repository"
)

function main() {
  local version_glob="$1" check_dir found_dirs

  for check_dir in "${CHECK_DIRS[@]}"; do
    if ! test -e "$check_dir"; then
      continue
    fi

    mapfile -d $'\0' -t found_dirs < <(find -Ls "$check_dir" -type d -name "*${version_glob}*" -print0)

    if test "${#found_dirs[@]}" -eq 0; then
      echo "No directories for $version_glob found in $check_dir"
      continue
    fi

    log_with_title_sep "${version_glob} in $check_dir"
    join_by_newline_with_end "${found_dirs[@]}"
    log_sep

    if confirm_with_auto "Delete directories above?"; then
      log_and_run rm -rf "${found_dirs[@]}"
    fi
  done
}

main "$@"
